# Make sure to check the documentation at https://goreleaser.com
project_name: goreleaser-aws-lambda-example

env:
  - CGO_ENABLED=0

builds:
  # You can have multiple builds defined as a yaml list
  -
    # ID of the build. Defaults to the binary name.
    id: "build"

    # Custom environment variables to be set during the builds.
    # Default: `os.Environ()` merged with what you set the root `env` section.
    env:
      - CGO_ENABLED=0

    # GOOS list to build for. For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are darwin, linux, and windows.
    goos:
      - linux

    # GOARCH to build for. For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386, amd64 and arm64.
    goarch:
      - amd64

archives:
  -
    # ID of this archive. Defaults to `default`.
    id: archive

    # Builds reference which build instances should be archived in this archive.
    # Default is empty, which includes all builds.
    builds:
    - build

    # Archive format. Valid options are `tar.gz`, `tar.xz`, `tar`, `gz`, `zip` and `binary`.
    format: zip

    # Archive name template.
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64_
      {{- else if eq .Arch "amd64_v1" }}x86_64_
      {{- else if eq .Arch "386" }}i386_
      {{- else }}{{ .Arch }}_{{- end }}
      {{- if .Arm }}v{{ .Arm }}_{{- end }}